{"version":3,"sources":["webpack:///./src/routes/ref/ref-routes.ts","webpack:///.-common/src/utils/roles.ts?780b***","webpack:////home/mouliwi/Dev/workspaceJS/tags/hornet-js_5.1.0/hornet-js-core/src/inject/injector.ts?8d59*","webpack:///./~/app/reflect-metadata/Reflect.ts?aedf*","webpack:////home/mouliwi/Dev/workspaceJS/tags/hornet-js_5.1.0/hornet-js-core/src/inject/injectable.ts?9d4a*"],"names":[],"mappings":";;;;;;;;;AAAA,gDAAyF;AACzF,iDAA2F;AAC3F,uCAAgE;AAEhE,sCAIgD;AAEhD,iDAAwG;AACxG,0CAA8D;AAE9D;IAA+C,6CAAc;IAEzD;QAAA,YACI,iBAAO,SAsBV;QApBG,KAAI,CAAC,YAAY,CAAC,qBAAc,EAC5B,cAAM,WAAI,gCAAc,CAAC,iBAAiB,CAAC,YAAY,EAAE,IAAI,EAAE,mBAAQ,CAAC,aAAa,CAAC,yCAAsB,CAAC,CAAC,EAAxG,CAAwG,EAC9G,aAAK,CAAC,QAAQ,CACjB,CAAC;QAEF,KAAI,CAAC,YAAY,CAAC,eAAQ,EACtB,cAAM,WAAI,gCAAc,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,EAAE,mBAAQ,CAAC,aAAa,CAAC,yCAAsB,CAAC,CAAC,EAAtG,CAAsG,EAC5G,aAAK,CAAC,QAAQ,CACjB,CAAC;QAEF,KAAI,CAAC,YAAY,CAAC,0BAAmB,EACjC,cAAM,WAAI,gCAAc,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,IAAI,EAAE,mBAAQ,CAAC,aAAa,CAAC,yCAAsB,CAAC,CAAC,EAA9G,CAA8G,EACpH,aAAK,CAAC,QAAQ,CACjB,CAAC;QAEF,KAAI,CAAC,YAAY,CAAC,0BAAmB,GAAG,YAAY,EAChD,UAAC,YAAY,IAAK,WAAI,gCAAc,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,IAAI,EAAE,mBAAQ,CAAC,aAAa,CAAC,yCAAsB,CAAC,CAAC,EAA9G,CAA8G,EAChI,aAAK,CAAC,KAAK,EACX,MAAM,CACT,CAAC;;IACN,CAAC;IACL,wBAAC;AAAD,CAAC,CA1B8C,gCAAc,GA0B5D;;;;;;;;;;;;;ACvCD;;GAEG;AACH;IAAA;IASA,CAAC;IAPU,cAAQ,GAAG,iBAAiB,CAAC;IAC7B,eAAS,GAAG,kBAAkB,CAAC;IAE/B,UAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACxB,WAAK,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAE1B,cAAQ,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;IACxD,YAAC;CAAA;AATY,sBAAK;;;;;;;;;;;ACHlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqEG;;AAYH,4CAAoD;AACpD,+CAAwC;AACxC,gDAA+E;AAC/E,6CAAuE;AACvE,gDAA+D;AAC/D,+BAA4B;AAE5B,IAAI,MAAM,GAAG,0BAAQ,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC;AAC9D,IAAM,OAAO,GAAG,cAAc,CAAC;AAElB,2BAAmB,GAAG,kBAAkB,CAAC;AAEtD;IAAA;IAoGA,CAAC;IAhGG;;;;;SAKK;IACE,sBAAa,GAApB,UAAqB,GAA4C,EAAE,IAAU;QACzE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAE,CAAC;YACT,IAAI,GAAG,uBAAK,CAAC,QAAQ,GAAG,iBAAI,CAAC,MAAM,GAAG,iBAAI,CAAC,MAAM,CAAC;QACtD,CAAC;QACD,IAAI,EAAE,GAAG,GAAG,CAAC;QAEb,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACtB,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,CAAC,IAAI,CAAC,CAAC;IACpF,CAAC;IAED;;;;SAIK;IACE,yBAAgB,GAAvB,UAA2B,GAA4C,EAAE,IAAU;QAC/E,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAE,CAAC;YACT,IAAI,GAAG,uBAAK,CAAC,QAAQ,GAAG,iBAAI,CAAC,MAAM,GAAG,iBAAI,CAAC,MAAM,CAAC;QACtD,CAAC;QAED,IAAI,EAAE,GAAG,GAAG,CAAC;QAEb,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACtB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC,uBAAuB,GAAG,GAAG,GAAG,oCAAoC,CAAC,CAAC;YACnF,MAAM,IAAI,gCAAc,CAAC,WAAW,GAAG,wBAAU,CAAC,wBAAwB,EAAE,EAAC,YAAY,EAAE,wBAAU,CAAC,iBAAiB,EAAC,CAAC,CAAC;QAC9H,CAAC;QAED,OAAO,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED;;;;;SAKK;IACE,iBAAQ,GAAf,UAAgB,GAA4C,EAAE,KAAU,EAAE,KAAuB,EAAE,IAAU;QAAnC,gCAAY,kBAAK,CAAC,KAAK;QAE7F,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAE,CAAC;YACT,IAAI,GAAG,uBAAK,CAAC,QAAQ,GAAG,iBAAI,CAAC,MAAM,GAAG,iBAAI,CAAC,MAAM,CAAC;QACtD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAY,IAAI,iBAAI,CAAC,MAAM,IAAI,uBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,iBAAI,CAAC,MAAM,IAAI,CAAC,uBAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrG,MAAM,CAAC,KAAK,CAAC,uBAAuB,GAAG,GAAG,GAAG,WAAW,GAAG,KAAK,GAAG,gBAAgB,GAAG,CAAC,IAAI,IAAI,iBAAI,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;QAC7I,CAAC;QAED,IAAI,EAAE,GAAG,GAAG,CAAC;QAEb,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;QACtB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACN,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,CAAC,IAAI,CAAC,CAAC;QAC1F,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,KAAK,CAAC,uBAAuB,GAAG,GAAG,GAAG,yBAAyB,CAAC,CAAC;YACxE,MAAM,IAAI,gCAAc,CAAC,WAAW,GAAG,wBAAU,CAAC,4BAA4B,EAAE,EAAC,YAAY,EAAE,wBAAU,CAAC,iBAAiB,EAAC,CAAC,CAAC;QAClI,CAAC;QAED,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACd,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,GAAG,EAAE,CAAC;QACzC,CAAC;QACD,IAAI,CAAC;YACD,MAAM,EAAC,KAAK,CAAC,CAAC,CAAC;gBACX,KAAK,kBAAK,CAAC,KAAK;oBACZ,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;oBAC9C,KAAK,CAAC;gBACV,KAAK,kBAAK,CAAC,SAAS;oBAChB,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC;oBACpD,KAAK,CAAC;gBACV,KAAK,kBAAK,CAAC,SAAS;oBAChB,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAY,CAAC,EAAE,IAAI,GAAC,EAAE,EAAE;wBAC5D,GAAG,EAAG,cAAQ,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI;qBAAC,CAAC;oBAC7D,KAAK,CAAC;YACd,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,KAAK,CAAC,uBAAuB,GAAG,GAAG,GAAG,WAAW,GAAG,KAAK,GAAG,YAAY,EAAE,CAAC,CAAC,CAAC;YACpF,MAAM,IAAI,gCAAc,CAAC,WAAW,GAAG,wBAAU,CAAC,YAAY,EAAE,EAAC,YAAY,EAAE,wBAAU,CAAC,iBAAiB,EAAC,CAAC,CAAC;QAClH,CAAC;IACL,CAAC;IAhGc,iBAAQ,GAAyB,EAAE,CAAC;IAkGvD,eAAC;CAAA;AApGY,4BAAQ;;;;;;;;;AC7FrB;;;;;;;;;;;;;gFAagF;AAChF,IAAU,OAAO,CAoqDhB;AApqDD,WAAU,OAAO;IACb,YAAY,CAAC;IAwFb,IAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;IAE/C,kCAAkC;IAClC,IAAM,cAAc,GAAG,OAAO,MAAM,KAAK,UAAU,CAAC;IACpD,IAAM,iBAAiB,GAAG,cAAc,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,eAAe,CAAC;IAC7H,IAAM,cAAc,GAAG,cAAc,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,GAAG,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC;IAEjH,IAAU,OAAO,CAmBhB;IAnBD,WAAU,OAAO;QACb,IAAM,cAAc,GAAG,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,yCAAyC;QACrG,IAAM,aAAa,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,CAAC,CAAC,qCAAqC;QAC/F,IAAM,SAAS,GAAG,CAAC,cAAc,IAAI,CAAC,aAAa,CAAC;QAEpD,iEAAiE;QACpD,cAAM,GAAG,cAAc;cAC9B,cAAS,qBAAc,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAe,CAAC,EAAjD,CAAiD;cAC1D,aAAa;kBACT,cAAS,qBAAc,CAAC,EAAE,SAAS,EAAE,IAAW,EAAgB,CAAC,EAAxD,CAAwD;kBACjE,cAAS,qBAAc,CAAC,EAAgB,CAAC,EAAhC,CAAgC,CAAC;QAEvC,WAAG,GAAG,SAAS;cACtB,UAAI,GAAe,EAAE,GAA6B,IAAK,aAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAArB,CAAqB;cAC5E,UAAI,GAAe,EAAE,GAA6B,IAAK,UAAG,IAAI,GAAG,EAAV,CAAU,CAAC;QAE3D,WAAG,GAAG,SAAS;cACtB,UAAI,GAAe,EAAE,GAA6B,IAAoB,aAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,SAAS,EAA5C,CAA4C;cAClH,UAAI,GAAe,EAAE,GAA6B,IAAoB,UAAG,CAAC,GAAG,CAAC,EAAR,CAAQ,CAAC;IACzF,CAAC,EAnBS,OAAO,KAAP,OAAO,QAmBhB;IAED,wDAAwD;IACxD,IAAM,iBAAiB,GAAG,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAC1D,IAAM,WAAW,GAAG,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,KAAK,MAAM,CAAC;IAC9H,IAAM,IAAI,GAAe,CAAC,WAAW,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,GAAG,iBAAiB,EAAE,CAAC;IAC9I,IAAM,IAAI,GAAe,CAAC,WAAW,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,GAAG,iBAAiB,EAAE,CAAC;IAC9I,IAAM,QAAQ,GAAmB,CAAC,WAAW,IAAI,OAAO,OAAO,KAAK,UAAU,GAAG,OAAO,GAAG,qBAAqB,EAAE,CAAC;IAEnH,6BAA6B;IAC7B,mGAAmG;IACnG,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAwD,CAAC;IA4FtF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAsCI;IACJ,kBAAyB,UAAgD,EAAE,MAAW,EAAE,WAA6B,EAAE,UAAsC;QACzJ,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YACpG,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAAC,UAAU,GAAG,SAAS,CAAC;YAC/C,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;YACzC,MAAM,CAAC,gBAAgB,CAAoB,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QAC5F,CAAC;QACD,IAAI,CAAC,CAAC;YACF,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YAClD,MAAM,CAAC,mBAAmB,CAAmB,UAAU,EAAY,MAAM,CAAC,CAAC;QAC/E,CAAC;IACL,CAAC;IAde,gBAAQ,WAcvB;IAED,qDAAqD;IACrD,gEAAgE;IAEhE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAuCI;IACJ,kBAAyB,WAAgB,EAAE,aAAkB;QAGzD,mBAAmB,MAAW,EAAE,WAA6B;YACzD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;gBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YACpF,yBAAyB,CAAC,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;QAC/E,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IATe,gBAAQ,WASvB;IA+DD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAsCI;IACJ,wBAA+B,WAAgB,EAAE,aAAkB,EAAE,MAAW,EAAE,WAA6B;QAC3G,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACxE,MAAM,CAAC,yBAAyB,CAAC,WAAW,EAAE,aAAa,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IACtF,CAAC;IAJe,sBAAc,iBAI7B;IAqDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAiCI;IACJ,qBAA4B,WAAgB,EAAE,MAAW,EAAE,WAA6B;QACpF,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACxE,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IACjE,CAAC;IAJe,mBAAW,cAI1B;IAqDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAiCI;IACJ,wBAA+B,WAAgB,EAAE,MAAW,EAAE,WAA6B;QACvF,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACxE,MAAM,CAAC,sBAAsB,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IACpE,CAAC;IAJe,sBAAc,iBAI7B;IAqDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAiCI;IACJ,qBAA4B,WAAgB,EAAE,MAAW,EAAE,WAA6B;QACpF,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACxE,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IACjE,CAAC;IAJe,mBAAW,cAI1B;IAqDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAiCI;IACJ,wBAA+B,WAAgB,EAAE,MAAW,EAAE,WAA6B;QACvF,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACxE,MAAM,CAAC,sBAAsB,CAAC,WAAW,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IACpE,CAAC;IAJe,sBAAc,iBAI7B;IAmDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCI;IACJ,yBAAgC,MAAW,EAAE,WAA6B;QACtE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACxE,MAAM,CAAC,oBAAoB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACrD,CAAC;IAJe,uBAAe,kBAI9B;IAmDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCI;IACJ,4BAAmC,MAAW,EAAE,WAA6B;QACzE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACxE,MAAM,CAAC,uBAAuB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACxD,CAAC;IAJe,0BAAkB,qBAIjC;IAqDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAiCI;IACJ,wBAA+B,WAAgB,EAAE,MAAW,EAAE,WAA6B;QACvF,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;QACxE,IAAM,WAAW,GAAG,sBAAsB,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QAClF,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACnD,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACtC,IAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5C,cAAc,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACzC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAZe,sBAAc,iBAY7B;IAED,6BAA6B,UAA4B,EAAE,MAAgB;QACvE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC9C,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,IAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChD,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;oBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;gBACrD,MAAM,GAAa,SAAS,CAAC;YACjC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAED,0BAA0B,UAA6B,EAAE,MAAW,EAAE,WAA4B,EAAE,UAA0C;QAC1I,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC9C,IAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,IAAM,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;gBAChD,UAAU,GAAuB,SAAS,CAAC;YAC/C,CAAC;QACL,CAAC;QACD,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IAMD,gCAAgC,CAAM,EAAE,CAA8B,EAAE,MAAe;QACnF,IAAI,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrC,EAAE,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC,SAAS,CAAC;YAC9B,cAAc,GAAG,IAAI,IAAI,EAA8C,CAAC;YACxE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;QACpC,CAAC;QACD,IAAI,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACxC,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC,SAAS,CAAC;YAC9B,WAAW,GAAG,IAAI,IAAI,EAAY,CAAC;YACnC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;QACvC,CAAC;QACD,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAED,iDAAiD;IACjD,mEAAmE;IACnE,6BAA6B,WAAgB,EAAE,CAAM,EAAE,CAA8B;QACjF,IAAM,MAAM,GAAG,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,MAAM,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACxB,IAAM,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,oDAAoD;IACpD,sEAAsE;IACtE,gCAAgC,WAAgB,EAAE,CAAM,EAAE,CAA8B;QACpF,IAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACnE,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,iDAAiD;IACjD,mEAAmE;IACnE,6BAA6B,WAAgB,EAAE,CAAM,EAAE,CAA8B;QACjF,IAAM,MAAM,GAAG,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,MAAM,CAAC;YAAC,MAAM,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7D,IAAM,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,oDAAoD;IACpD,sEAAsE;IACtE,gCAAgC,WAAgB,EAAE,CAAM,EAAE,CAA8B;QACpF,IAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACnE,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,MAAM,CAAC,SAAS,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,sEAAsE;IACtE,yEAAyE;IACzE,mCAAmC,WAAgB,EAAE,aAAkB,EAAE,CAAM,EAAE,CAA8B;QAC3G,IAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;QAClE,WAAW,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IAChD,CAAC;IAED,qCAAqC;IACrC,oEAAoE;IACpE,8BAA8B,CAAM,EAAE,CAA8B;QAChE,IAAM,OAAO,GAAG,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,IAAM,MAAM,GAAG,sBAAsB,CAAC,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC;QACpC,IAAM,UAAU,GAAG,oBAAoB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC;QAC3C,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC,UAAU,CAAC;QAC3C,IAAM,GAAG,GAAG,IAAI,IAAI,EAAO,CAAC;QAC5B,IAAM,IAAI,GAAU,EAAE,CAAC;QACvB,GAAG,CAAC,CAAc,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;YAApB,IAAM,GAAG;YACV,IAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACJ;QACD,GAAG,CAAC,CAAc,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;YAAvB,IAAM,GAAG;YACV,IAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACJ;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,wCAAwC;IACxC,uEAAuE;IACvE,iCAAiC,CAAM,EAAE,CAA8B;QACnE,IAAM,IAAI,GAAU,EAAE,CAAC;QACvB,IAAM,WAAW,GAAG,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;QACnE,EAAE,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAC1C,IAAM,OAAO,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;QACnC,IAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,IAAI,EAAE,CAAC;YACV,IAAM,IAAI,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,IAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC;gBACD,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACxB,CACA;YAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACP,IAAI,CAAC;oBACD,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC5B,CAAC;wBACO,CAAC;oBACL,MAAM,CAAC,CAAC;gBACZ,CAAC;YACL,CAAC;YACD,CAAC,EAAE,CAAC;QACR,CAAC;IACL,CAAC;IAED,sCAAsC;IACtC,uEAAuE;IACvE,cAAc,CAAM;QAChB,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC,YAAQ,CAAC;QAChC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACf,KAAK,WAAW,EAAE,MAAM,CAAC,iBAAa,CAAC;YACvC,KAAK,SAAS,EAAE,MAAM,CAAC,eAAW,CAAC;YACnC,KAAK,QAAQ,EAAE,MAAM,CAAC,cAAU,CAAC;YACjC,KAAK,QAAQ,EAAE,MAAM,CAAC,cAAU,CAAC;YACjC,KAAK,QAAQ,EAAE,MAAM,CAAC,cAAU,CAAC;YACjC,KAAK,QAAQ,EAAE,MAAM,CAAC,CAAC,KAAK,IAAI,GAAG,YAAQ,GAAG,cAAU,CAAC;YACzD,SAAS,MAAM,CAAC,cAAU,CAAC;QAC/B,CAAC;IACL,CAAC;IAcD,2BAA2B;IAC3B,+EAA+E;IAC/E,qBAAqB,CAAM;QACvB,MAAM,CAAC,CAAC,KAAK,SAAS,CAAC;IAC3B,CAAC;IAED,sBAAsB;IACtB,0EAA0E;IAC1E,gBAAgB,CAAM;QAClB,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC;IACtB,CAAC;IAED,wBAAwB;IACxB,4EAA4E;IAC5E,kBAAkB,CAAM;QACpB,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC;IACjC,CAAC;IAED,wBAAwB;IACxB,kDAAkD;IAClD,kBAAqB,CAA4D;QAC7E,MAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,KAAK,IAAI,GAAG,OAAO,CAAC,KAAK,UAAU,CAAC;IACxE,CAAC;IAED,sBAAsB;IACtB,sDAAsD;IAEtD,6CAA6C;IAC7C,kDAAkD;IAClD,qBAAqB,KAAU,EAAE,aAAmB;QAChD,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,KAAK,iBAAa,EAAE,MAAM,CAAC,KAAK,CAAC;YACjC,KAAK,YAAQ,EAAE,MAAM,CAAC,KAAK,CAAC;YAC5B,KAAK,eAAW,EAAE,MAAM,CAAC,KAAK,CAAC;YAC/B,KAAK,cAAU,EAAE,MAAM,CAAC,KAAK,CAAC;YAC9B,KAAK,cAAU,EAAE,MAAM,CAAC,KAAK,CAAC;YAC9B,KAAK,cAAU,EAAE,MAAM,CAAC,KAAK,CAAC;QAClC,CAAC;QACD,IAAM,IAAI,GAAoC,aAAa,KAAK,cAAU,GAAG,QAAQ,GAAG,aAAa,KAAK,cAAU,GAAG,QAAQ,GAAG,SAAS,CAAC;QAC5I,IAAM,YAAY,GAAG,SAAS,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;YAC7B,IAAM,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC9C,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAAC,MAAM,IAAI,SAAS,EAAE,CAAC;YAC5C,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QACD,MAAM,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,KAAK,SAAS,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;IAC5E,CAAC;IAED,uCAAuC;IACvC,0DAA0D;IAC1D,6BAA6B,CAAM,EAAE,IAAyB;QAC1D,EAAE,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACpB,IAAM,UAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC5B,EAAE,CAAC,CAAC,UAAU,CAAC,UAAQ,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAM,MAAM,GAAG,UAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC;YACzC,CAAC;YACD,IAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;YAC1B,EAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC;YACzC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;YAC1B,EAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC;YACzC,CAAC;YACD,IAAM,UAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC5B,EAAE,CAAC,CAAC,UAAU,CAAC,UAAQ,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAM,MAAM,GAAG,UAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC;YACzC,CAAC;QACL,CAAC;QACD,MAAM,IAAI,SAAS,EAAE,CAAC;IAC1B,CAAC;IAED,4BAA4B;IAC5B,qDAAqD;IACrD,mBAAmB,QAAa;QAC5B,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,4BAA4B;IAC5B,+CAA+C;IAC/C,kBAAkB,QAAa;QAC3B,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC;IACzB,CAAC;IAED,iCAAiC;IACjC,oDAAoD;IACpD,uBAAuB,QAAa;QAChC,IAAM,GAAG,GAAG,WAAW,CAAC,QAAQ,EAAE,cAAU,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAAC,MAAM,CAAC,GAAG,CAAC;QAC9B,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,wCAAwC;IACxC,wEAAwE;IAExE,0BAA0B;IAC1B,8CAA8C;IAC9C,iBAAiB,QAAa;QAC1B,MAAM,CAAC,KAAK,CAAC,OAAO;cACd,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;cACvB,QAAQ,YAAY,MAAM;kBACtB,QAAQ,YAAY,KAAK;kBACzB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,gBAAgB,CAAC;IAC5E,CAAC;IAED,6BAA6B;IAC7B,iDAAiD;IACjD,oBAAoB,QAAa;QAC7B,kFAAkF;QAClF,MAAM,CAAC,OAAO,QAAQ,KAAK,UAAU,CAAC;IAC1C,CAAC;IAED,gCAAgC;IAChC,oDAAoD;IACpD,uBAAuB,QAAa;QAChC,uFAAuF;QACvF,MAAM,CAAC,OAAO,QAAQ,KAAK,UAAU,CAAC;IAC1C,CAAC;IAED,gCAAgC;IAChC,oDAAoD;IACpD,uBAAuB,QAAa;QAChC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrB,KAAK,cAAU,EAAE,MAAM,CAAC,IAAI,CAAC;YAC7B,KAAK,cAAU,EAAE,MAAM,CAAC,IAAI,CAAC;YAC7B,SAAS,MAAM,CAAC,KAAK,CAAC;QAC1B,CAAC;IACL,CAAC;IAED,4BAA4B;IAC5B,4DAA4D;IAE5D,wBAAwB;IACxB,gDAAgD;IAChD,mBAAmB,CAAM,EAAE,CAAM;QAC7B,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC,SAAS,CAAC;QAC1D,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,qCAAqC;IACrC,qEAAqE;IAErE,qBAAwB,GAAgB;QACpC,IAAM,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC,CAAC,YAAY;QAC5D,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAAC,MAAM,IAAI,SAAS,EAAE,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED,kCAAkC;IAClC,yDAAyD;IACzD,uBAA0B,UAA6B;QACnD,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,+BAA+B;IAC/B,mDAAmD;IACnD,sBAAyB,QAAqB;QAC1C,IAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;IACxC,CAAC;IAED,4CAA4C;IAC5C,oDAAoD;IACpD,uBAA0B,QAAqB;QAC3C,IAAM,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC7B,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5B,CAAC;IAED,0DAA0D;IAC1D,0FAA0F;IAE1F,oCAAoC;IACpC,6DAA6D;IAC7D,gCAAgC,CAAM;QAClC,IAAM,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACvC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,iBAAiB,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAErE,iEAAiE;QACjE,0EAA0E;QAC1E,qFAAqF;QACrF,gFAAgF;QAChF,kCAAkC;QAElC,wFAAwF;QACxF,gFAAgF;QAChF,EAAE,CAAC,CAAC,KAAK,KAAK,iBAAiB,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAE9C,yGAAyG;QACzG,IAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;QAC9B,IAAM,cAAc,GAAG,SAAS,IAAI,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACrE,EAAE,CAAC,CAAC,cAAc,IAAI,IAAI,IAAI,cAAc,KAAK,MAAM,CAAC,SAAS,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAEhF,gFAAgF;QAChF,IAAM,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;QAC/C,EAAE,CAAC,CAAC,OAAO,WAAW,KAAK,UAAU,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAEpD,iFAAiF;QACjF,EAAE,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAEpC,+CAA+C;QAC/C,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAED,iBAAiB;IACjB;QACI,IAAM,aAAa,GAAG,EAAE,CAAC;QACzB,IAAM,aAAa,GAAU,EAAE,CAAC;QAEhC;YAKI,qBAAY,IAAS,EAAE,MAAW,EAAE,QAAiC;gBAF7D,WAAM,GAAG,CAAC,CAAC;gBAGf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC9B,CAAC;YACD,mCAAY,GAAZ,cAAiB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/B,sBAAC,cAAc,CAAC,GAAhB,cAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACnC,0BAAI,GAAJ;gBACI,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1C,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;oBACtE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;wBACjB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;wBAC3B,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;oBACjC,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,MAAM,EAAE,CAAC;oBAClB,CAAC;oBACD,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;gBAC1C,CAAC;gBACD,MAAM,CAAC,EAAE,KAAK,EAAS,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YACnD,CAAC;YACD,2BAAK,GAAL,UAAM,KAAU;gBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;oBAC3B,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;gBACjC,CAAC;gBACD,MAAM,KAAK,CAAC;YAChB,CAAC;YACD,4BAAM,GAAN,UAAO,KAAS;gBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;oBAC3B,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;gBACjC,CAAC;gBACD,MAAM,CAAC,EAAE,KAAK,EAAS,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YAC/C,CAAC;YACL,kBAAC;QAAD,CAAC;QAED,MAAM;YAAC;gBACK,UAAK,GAAQ,EAAE,CAAC;gBAChB,YAAO,GAAsB,EAAE,CAAC;gBAChC,cAAS,GAAG,aAAa,CAAC;gBAC1B,gBAAW,GAAG,CAAC,CAAC,CAAC;YAoD7B,CAAC;YAnDG,sBAAI,qBAAI;qBAAR,cAAa,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;;;eAAA;YACxC,iBAAG,GAAH,UAAI,GAAM,IAAa,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvE,iBAAG,GAAH,UAAI,GAAM;gBACN,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;gBAChD,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;YACxD,CAAC;YACD,iBAAG,GAAH,UAAI,GAAM,EAAE,KAAQ;gBAChB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,oBAAM,GAAN,UAAO,GAAM;gBACT,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;gBAChD,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;oBACb,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;wBACpC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC1C,CAAC;oBACD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;oBACtB,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;wBAC/B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;oBAC1B,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,mBAAK,GAAL;gBACI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;gBACxB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;gBAC/B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;YAC1B,CAAC;YACD,kBAAI,GAAJ,cAAS,MAAM,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YACpE,oBAAM,GAAN,cAAW,MAAM,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACxE,qBAAO,GAAP,cAAY,MAAM,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACzE,2BAAY,GAAZ,cAAiB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACzC,cAAC,cAAc,CAAC,GAAhB,cAAqB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACrC,mBAAK,GAAb,UAAc,GAAM,EAAE,MAAgB;gBAClC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,GAAG,CAAC,CAAC,CAAC;oBACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;gBAChE,CAAC;gBACD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACjC,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;YAC5B,CAAC;YACL,UAAC;QAAD,CAAC,IAAC;QAEF,gBAAsB,GAAM,EAAE,CAAI;YAC9B,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAED,kBAAwB,CAAI,EAAE,KAAQ;YAClC,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,kBAAwB,GAAM,EAAE,KAAQ;YACpC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,CAAW,CAAC;QAClC,CAAC;IACL,CAAC;IAED,iBAAiB;IACjB;QACI,MAAM;YAAC;gBACK,SAAI,GAAG,IAAI,IAAI,EAAY,CAAC;YAWxC,CAAC;YAVG,sBAAI,qBAAI;qBAAR,cAAa,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;eAAA;YACrC,iBAAG,GAAH,UAAI,KAAQ,IAAa,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvD,iBAAG,GAAH,UAAI,KAAQ,IAAY,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YACnE,oBAAM,GAAN,UAAO,KAAQ,IAAa,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7D,mBAAK,GAAL,cAAgB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACpC,kBAAI,GAAJ,cAAS,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACnC,oBAAM,GAAN,cAAW,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YACvC,qBAAO,GAAP,cAAY,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YACzC,2BAAY,GAAZ,cAAiB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACtC,cAAC,cAAc,CAAC,GAAhB,cAAqB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAC9C,UAAC;QAAD,CAAC,IAAC;IACN,CAAC;IAED,qBAAqB;IACrB;QACI,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,EAAW,CAAC;QACvC,IAAM,OAAO,GAAG,eAAe,EAAE,CAAC;QAClC,MAAM;YAAC;gBACK,SAAI,GAAG,eAAe,EAAE,CAAC;YAsBrC,CAAC;YArBG,qBAAG,GAAH,UAAI,MAAS;gBACT,IAAM,KAAK,GAAG,uBAAuB,CAAI,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;gBACnE,MAAM,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACvE,CAAC;YACD,qBAAG,GAAH,UAAI,MAAS;gBACT,IAAM,KAAK,GAAG,uBAAuB,CAAI,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;gBACnE,MAAM,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;YAC3E,CAAC;YACD,qBAAG,GAAH,UAAI,MAAS,EAAE,KAAQ;gBACnB,IAAM,KAAK,GAAG,uBAAuB,CAAI,MAAM,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,wBAAM,GAAN,UAAO,MAAS;gBACZ,IAAM,KAAK,GAAG,uBAAuB,CAAI,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;gBACnE,MAAM,CAAC,KAAK,KAAK,SAAS,GAAG,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACjE,CAAC;YACD,uBAAK,GAAL;gBACI,mEAAmE;gBACnE,IAAI,CAAC,IAAI,GAAG,eAAe,EAAE,CAAC;YAClC,CAAC;YACL,cAAC;QAAD,CAAC,IAAC;QAEF;YACI,IAAI,GAAW,CAAC;YAChB;gBAAG,GAAG,GAAG,aAAa,GAAG,UAAU,EAAE,CAAC;mBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;YAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YACjB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAID,iCAAoC,MAAS,EAAE,MAAe;YAC1D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;oBAAC,MAAM,CAAC,SAAS,CAAC;gBAC9B,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,MAAM,EAAO,EAAE,CAAC,CAAC;YAC7E,CAAC;YACD,MAAM,CAAO,MAAO,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC;QAED,yBAAyB,MAAkB,EAAE,IAAY;YACrD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;YACpE,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAED,wBAAwB,IAAY;YAChC,EAAE,CAAC,CAAC,OAAO,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAe,CAAC;gBACrG,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,WAAW,CAAC;oBAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAe,CAAC;gBACzG,MAAM,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;YACvD,CAAC;YACD,MAAM,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QAClD,CAAC;QAED;YACI,IAAM,IAAI,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;YACvC,kCAAkC;YAClC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;YAChC,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,SAAS,EAAE,EAAE,MAAM,EAAE,CAAC;gBAChD,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,CAAC;oBAAC,MAAM,IAAI,GAAG,CAAC;gBAChE,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;oBAAC,MAAM,IAAI,GAAG,CAAC;gBAC7B,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;YAC9C,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;IACL,CAAC;IAED,kFAAkF;IAClF,wBAA2B,GAAM;QACvB,GAAI,CAAC,EAAE,GAAG,SAAS,CAAC;QAC1B,OAAa,GAAI,CAAC,EAAE,CAAC;QACrB,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAED,uBAAuB;IACvB,CAAC,UAAU,QAAa;QACpB,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;gBAC/B,GAAG,CAAC,CAAC,IAAM,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;oBACtB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAS,OAAQ,CAAC,CAAC,CAAC,CAAC;oBAC5C,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;QACD,IAAI,CAAC,CAAC;YACF,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;QAC/B,CAAC;IACL,CAAC,CAAC,CACE,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM;QAClC,OAAO,IAAI,KAAK,WAAW,GAAG,IAAI;YAC9B,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AAC5C,CAAC,EApqDS,OAAO,KAAP,OAAO,QAoqDhB;;;;;;;;;;;AClrDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqEG;;;AAEH;;;;;;;GAOG;AAEH,yBAA0B;AAC1B,+CAAwC;AACxC,0CAAoE;AAKpE;;;;;KAKK;AACL,oBAA2B,GAA8C,EAAE,KAA0B,EAAE,IAAW;IAAvC,gCAAe,KAAK,CAAC,KAAK;IACjG,MAAM,CAAC,UAA6C,WAAa;QAC7D,IAAI,gBAAgB,GAAiC,OAAO,CAAC,cAAc,CAAC,8BAAmB,EAAE,WAAW,CAAC,CAAC;QAC9G,IAAI,cAAc,GAAG,WAAW,CAAC;QACjC,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACnB,cAAc;gBAAiB,mCAAW;gBACtC;oBAAY,cAAa;yBAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;wBAAb,yBAAa;;oBAAzB,iBAKC;oBAJG,gBAAgB,CAAC,OAAO,CAAC,UAAC,eAAe;wBACrC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAI,mBAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC/G,CAAC,CAAC,CAAC;oBACH,2BAAS,IAAI,UAAE;;gBACnB,CAAC;gBACL,cAAC;YAAD,CAAC,CAP8B,WAAW,EAOzC,CAAC;QACN,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAY,IAAI,IAAI,CAAC,MAAM,IAAI,uBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,uBAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACvG,mBAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,cAAc,EAAE,KAAK,CAAE,CAAC;YACnD,CAAC;QACL,CAAC;QAED,MAAM,CAAC,cAAc,CAAC;IAC1B,CAAC;AACL,CAAC;AAvBD,gCAuBC;AAAA,CAAC;AAEF,IAAY,IAGX;AAHD,WAAY,IAAI;IACZ,mCAAM;IACN,mCAAM;AACV,CAAC,EAHW,IAAI,GAAJ,YAAI,KAAJ,YAAI,QAGf;AAAA,CAAC;AAEF,IAAY,KAIX;AAJD,WAAY,KAAK;IACb,2CAAS;IACT,2CAAS;IACT,mCAAK;AACT,CAAC,EAJW,KAAK,GAAL,aAAK,KAAL,aAAK,QAIhB;AAAA,CAAC","file":"js/6.js","sourcesContent":["import * as ReferentielAction from \"applitutoriel-js-common/src/actions/ref/ref-actions\";\r\nimport { AbstractRoutes, DataRouteInfos } from \"hornet-js-core/src/routes/abstract-routes\";\r\nimport { Roles } from \"applitutoriel-js-common/src/utils/roles\";\r\n\r\nimport {\r\n    URL_PAYS,\r\n    URL_REF_VILLES,\r\n    URL_REF_NATIONALITE\r\n} from \"applitutoriel-js-common/src/utils/urls\";\r\n\r\nimport { ReferentielPaysService } from \"applitutoriel-js-common/src/services/data/ref/ref-pays-service\";\r\nimport { Injector } from \"hornet-js-core/src/inject/injector\";\r\n\r\nexport default class ReferentielRoutes extends AbstractRoutes {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.addDataRoute(URL_REF_VILLES,\r\n            () => new DataRouteInfos(ReferentielAction.ListerVilles, null, Injector.getRegistered(ReferentielPaysService)),\r\n            Roles.EVERYONE\r\n        );\r\n\r\n        this.addDataRoute(URL_PAYS,\r\n            () => new DataRouteInfos(ReferentielAction.ListerPays, null, Injector.getRegistered(ReferentielPaysService)),\r\n            Roles.EVERYONE\r\n        );\r\n\r\n        this.addDataRoute(URL_REF_NATIONALITE,\r\n            () => new DataRouteInfos(ReferentielAction.ListerNationalites, null, Injector.getRegistered(ReferentielPaysService)),\r\n            Roles.EVERYONE\r\n        );\r\n        \r\n        this.addDataRoute(URL_REF_NATIONALITE + \"/recherche\",\r\n            (nationnalite) => new DataRouteInfos(ReferentielAction.ListerNationalites, null, Injector.getRegistered(ReferentielPaysService)),\r\n            Roles.ADMIN,\r\n            \"post\"\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/routes/ref/ref-routes.ts","/**\r\n * Classe regroupant les rôles disponibles dans l'appli-tuto\r\n */\r\nexport class Roles {\r\n\r\n    static USER_STR = \"APPLI_TUTO_USER\";\r\n    static ADMIN_STR = \"APPLI_TUTO_ADMIN\";\r\n\r\n    static USER = [Roles.USER_STR];\r\n    static ADMIN = [Roles.ADMIN_STR];\r\n\r\n    static EVERYONE = [Roles.USER_STR, Roles.ADMIN_STR];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// .-common/src/utils/roles.ts","/**\n * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)\n * <p/>\n * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr\n * <p/>\n * Ce logiciel est un programme informatique servant à faciliter la création\n * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA\n * <p/>\n * Ce logiciel est régi par la licence CeCILL soumise au droit français et\n * respectant les principes de diffusion des logiciels libres. Vous pouvez\n * utiliser, modifier et/ou redistribuer ce programme sous les conditions\n * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA\n * sur le site \"http://www.cecill.info\".\n * <p/>\n * En contrepartie de l'accessibilité au code source et des droits de copie,\n * de modification et de redistribution accordés par cette licence, il n'est\n * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,\n * seule une responsabilité restreinte pèse sur l'auteur du programme,  le\n * titulaire des droits patrimoniaux et les concédants successifs.\n * <p/>\n * A cet égard  l'attention de l'utilisateur est attirée sur les risques\n * associés au chargement,  à l'utilisation,  à la modification et/ou au\n * développement et à la reproduction du logiciel par l'utilisateur étant\n * donné sa spécificité de logiciel libre, qui peut le rendre complexe à\n * manipuler et qui le réserve donc à des développeurs et des professionnels\n * avertis possédant  des  connaissances  informatiques approfondies.  Les\n * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du\n * logiciel à leurs besoins dans des conditions permettant d'assurer la\n * sécurité de leurs systèmes et ou de leurs données et, plus généralement,\n * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.\n * <p/>\n * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez\n * pris connaissance de la licence CeCILL, et que vous en avez accepté les\n * termes.\n * <p/>\n * <p/>\n * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)\n * <p/>\n * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr\n * <p/>\n * This software is a computer program whose purpose is to facilitate creation of\n * web application in accordance with french general repositories : RGI, RGS and RGAA.\n * <p/>\n * This software is governed by the CeCILL license under French law and\n * abiding by the rules of distribution of free software.  You can  use,\n * modify and/ or redistribute the software under the terms of the CeCILL\n * license as circulated by CEA, CNRS and INRIA at the following URL\n * \"http://www.cecill.info\".\n * <p/>\n * As a counterpart to the access to the source code and  rights to copy,\n * modify and redistribute granted by the license, users are provided only\n * with a limited warranty  and the software's author,  the holder of the\n * economic rights,  and the successive licensors  have only  limited\n * liability.\n * <p/>\n * In this respect, the user's attention is drawn to the risks associated\n * with loading,  using,  modifying and/or developing or reproducing the\n * software by the user in light of its specific status of free software,\n * that may mean  that it is complicated to manipulate,  and  that  also\n * therefore means  that it is reserved for developers  and  experienced\n * professionals having in-depth computer knowledge. Users are therefore\n * encouraged to load and test the software's suitability as regards their\n * requirements in conditions enabling the security of their systems and/or\n * data to be ensured and,  more generally, to use and operate it in the\n * same conditions as regards security.\n * <p/>\n * The fact that you are presently reading this means that you have had\n * knowledge of the CeCILL license and that you accept its terms.\n *\n */\n\n/**\n * hornet-js-core - Ensemble des composants qui forment le coeur de hornet-js\n *\n * @author MEAE - Ministère de l'Europe et des Affaires étrangères\n * @version v5.1.0\n * @link git+https://github.com/diplomatiegouvfr/hornet-js.git\n * @license CECILL-2.1\n */\n\nimport { Class, AbstractClass } from \"hornet-js-utils/src/typescript-utils\";\nimport { Side, Scope } from \"src/inject/injectable\";\nimport { Utils } from \"hornet-js-utils\";\nimport { TechnicalError } from \"hornet-js-utils/src/exception/technical-error\";\nimport { CodesError } from \"hornet-js-utils/src/exception/codes-error\";\nimport { Register } from \"hornet-js-utils/src/common-register\";\nimport * as _ from \"lodash\";\n\nvar logger = Register.getLogger(\"hornet-js-utils.bean-utils\");\nconst ID_NAME = \"__injectId__\";\n\nexport const INJECT_METADATA_KEY = \"injectParameters\";\n\nexport class Injector {\n\n    private static registry: {[key: string]: any} = {};\n\n    /**\n     * Retourne la classe enregistrée pour une clé donnée\n     * @param  key {any} clé de stockage\n     * @param  side {Side} complément de clé correspondant au côté d'exécution (Client ou Serveur)\n     * @returns La valeur stockée\n     * */\n    static getRegistered(key:Class<any> | AbstractClass<any> | string, side?:Side): any {\n        if (!side)  {\n            side = Utils.isServer ? Side.SERVER : Side.CLIENT;\n        }\n        let id = key;\n        \n        if (!_.isString(key)) {\n            id = key[ID_NAME];\n        }\n        \n        return Injector.registry[id as string] && Injector.registry[id as string][side];\n    }\n\n    /**\n     * Suppression la classe enregistrée pour une clé donnée\n     * @param  key {any} clé de stockage\n     * @param  side {Side} complément de clé correspondant au côté d'exécution (Client ou Serveur)\n     * */\n    static removeRegistered<T>(key:Class<any> | AbstractClass<any> | string, side?:Side): void {\n        if (!side)  {\n            side = Utils.isServer ? Side.SERVER : Side.CLIENT;\n        }\n\n        let id = key;\n        \n        if (!_.isString(key)) {\n            id = key[ID_NAME];\n        }\n\n        if (!id) {\n            logger.error(\"Error: Injector Bean \" + key + \" must be registered before remove.\");\n            throw new TechnicalError('ERR_TECH_' + CodesError.INJECT_NOT_DEFINED_ERROR, {errorMessage: CodesError.DEFAULT_ERROR_MSG});\n        }\n        \n        delete Injector.registry[id as string][side];\n    }\n\n    /**\n     * Enregistre une classe suivant une clé\n     * @param  key {any} clé de stockage\n     * @param  side {Side} complément de clé correspondant au côté d'exécution (Client ou Serveur)\n     * @returns La valeur stockée\n     * */\n    static register(key:Class<any> | AbstractClass<any> | string, value: any, scope:Scope=Scope.VALUE, side?:Side) {\n        \n        if (!side)  {\n            side = Utils.isServer ? Side.SERVER : Side.CLIENT;\n        } else if ((side as Side == Side.SERVER && Utils.isServer) || (side == Side.CLIENT && !Utils.isServer)) {\n            logger.trace(\"Error: Injector Key <\" + key + \"> scope <\" + scope + \"> wrong Side <\" + (side == Side.CLIENT ? \"client\" : \"server\") + \">\");\n        }\n\n        let id = key;\n        \n        if (!_.isString(key)) {\n            id = key[ID_NAME];\n        }\n\n        if (!id) {\n            id = key[ID_NAME] = _.uniqueId();\n        }\n        \n        let registered = Injector.registry[id as string] && Injector.registry[id as string][side];\n        if (registered) {\n            logger.error(\"Error: Injector Bean \" + key + \" is already registered.\");\n            throw new TechnicalError('ERR_TECH_' + CodesError.INJECT_ALREADY_DEFINED_ERROR, {errorMessage: CodesError.DEFAULT_ERROR_MSG});\n        }\n\n        registered = Injector.registry[id as string];\n        if (!registered) {\n            Injector.registry[id as string] = {};\n        }\n        try {\n            switch(scope) {\n                case Scope.VALUE:\n                    Injector.registry[id as string][side] = value;\n                    break;\n                case Scope.SINGLETON:\n                    Injector.registry[id as string][side] = new value();\n                    break;\n                case Scope.PROTOTYPE:\n                    Object.defineProperty(Injector.registry[id as string], side+\"\", {\n                        get : () => { return new value(); }, configurable: true})\n                    break;\n            }\n        } catch (e) {\n            logger.error(\"Error: Injector Key <\" + key + \"> scope <\" + scope + \">. cause :\", e);\n            throw new TechnicalError('ERR_TECH_' + CodesError.INJECT_ERROR, {errorMessage: CodesError.DEFAULT_ERROR_MSG});\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /home/mouliwi/Dev/workspaceJS/tags/hornet-js_5.1.0/hornet-js-core/src/inject/injector.ts","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nnamespace Reflect {\r\n    \"use strict\";\r\n\r\n    // Metadata Proposal\r\n    // https://rbuckton.github.io/reflect-metadata/\r\n\r\n    type HashMap<V> = Record<string, V>;\r\n\r\n    interface BufferLike {\r\n        [offset: number]: number;\r\n        length: number;\r\n    }\r\n\r\n    type IteratorResult<T> = { value: T, done: false } | { value: never, done: true };\r\n\r\n    interface Iterator<T> {\r\n        next(value?: any): IteratorResult<T>;\r\n        throw?(value: any): IteratorResult<T>;\r\n        return?(value?: T): IteratorResult<T>;\r\n    }\r\n\r\n    interface Iterable<T> {\r\n        \"@@iterator\"(): Iterator<T>;\r\n    }\r\n\r\n    interface IterableIterator<T> extends Iterator<T> {\r\n        \"@@iterator\"(): IterableIterator<T>;\r\n    }\r\n\r\n    interface Map<K, V> extends Iterable<[K, V]> {\r\n        size: number;\r\n        has(key: K): boolean;\r\n        get(key: K): V;\r\n        set(key: K, value?: V): this;\r\n        delete(key: K): boolean;\r\n        clear(): void;\r\n        keys(): IterableIterator<K>;\r\n        values(): IterableIterator<V>;\r\n        entries(): IterableIterator<[K, V]>;\r\n    }\r\n\r\n    interface MapConstructor {\r\n        new (): Map<any, any>;\r\n        new <K, V>(): Map<K, V>;\r\n        prototype: Map<any, any>;\r\n    }\r\n\r\n    interface Set<T> extends Iterable<T> {\r\n        size: number;\r\n        has(value: T): boolean;\r\n        add(value: T): this;\r\n        delete(value: T): boolean;\r\n        clear(): void;\r\n        keys(): IterableIterator<T>;\r\n        values(): IterableIterator<T>;\r\n        entries(): IterableIterator<[T, T]>;\r\n    }\r\n\r\n    interface SetConstructor {\r\n        new (): Set<any>;\r\n        new <T>(): Set<T>;\r\n        prototype: Set<any>;\r\n    }\r\n\r\n    interface WeakMap<K, V> {\r\n        clear(): void;\r\n        delete(key: K): boolean;\r\n        get(key: K): V;\r\n        has(key: K): boolean;\r\n        set(key: K, value?: V): WeakMap<K, V>;\r\n    }\r\n\r\n    interface WeakMapConstructor {\r\n        new (): WeakMap<any, any>;\r\n        new <K, V>(): WeakMap<K, V>;\r\n        prototype: WeakMap<any, any>;\r\n    }\r\n\r\n    type MemberDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor?: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;\r\n\r\n    declare const Symbol: { iterator: symbol, toPrimitive: symbol };\r\n    declare const Set: SetConstructor;\r\n    declare const WeakMap: WeakMapConstructor;\r\n    declare const Map: MapConstructor;\r\n    declare const global: any;\r\n    declare const crypto: Crypto;\r\n    declare const msCrypto: Crypto;\r\n    declare const process: any;\r\n\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n\r\n    // feature test for Symbol support\r\n    const supportsSymbol = typeof Symbol === \"function\";\r\n    const toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    const iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n\r\n    namespace HashMap {\r\n        const supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        const supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        const downLevel = !supportsCreate && !supportsProto;\r\n\r\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n        export const create = supportsCreate\r\n            ? <V>() => MakeDictionary(Object.create(null) as HashMap<V>)\r\n            : supportsProto\r\n                ? <V>() => MakeDictionary({ __proto__: null as any } as HashMap<V>)\r\n                : <V>() => MakeDictionary({} as HashMap<V>);\r\n\r\n        export const has = downLevel\r\n            ? <V>(map: HashMap<V>, key: string | number | symbol) => hasOwn.call(map, key)\r\n            : <V>(map: HashMap<V>, key: string | number | symbol) => key in map;\r\n\r\n        export const get = downLevel\r\n            ? <V>(map: HashMap<V>, key: string | number | symbol): V | undefined => hasOwn.call(map, key) ? map[key] : undefined\r\n            : <V>(map: HashMap<V>, key: string | number | symbol): V | undefined => map[key];\r\n    }\r\n\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    const functionPrototype = Object.getPrototypeOf(Function);\r\n    const usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n    const _Map: typeof Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    const _Set: typeof Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    const _WeakMap: typeof WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n\r\n    // [[Metadata]] internal slot\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n    const Metadata = new _WeakMap<any, Map<string | symbol | undefined, Map<any, any>>>();\r\n\r\n    /**\r\n      * Applies a set of decorators to a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @returns The result of applying the provided decorators.\r\n      * @remarks Decorators are applied in reverse order of their positions in the array.\r\n      * @example\r\n      *\r\n      *     class Example { }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      */\r\n    export function decorate(decorators: ClassDecorator[], target: Function): Function;\r\n\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey The property key to decorate.\r\n      * @param attributes A property descriptor.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod() { }\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    export function decorate(decorators: (PropertyDecorator | MethodDecorator)[], target: any, propertyKey: string | symbol, attributes?: PropertyDescriptor | null): PropertyDescriptor | undefined;\r\n\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey The property key to decorate.\r\n      * @param attributes A property descriptor.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod() { }\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    export function decorate(decorators: (PropertyDecorator | MethodDecorator)[], target: any, propertyKey: string | symbol, attributes: PropertyDescriptor): PropertyDescriptor;\r\n\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    export function decorate(decorators: (ClassDecorator | MemberDecorator)[], target: any, propertyKey?: string | symbol, attributes?: PropertyDescriptor | null): PropertyDescriptor | Function | undefined {\r\n        if (!IsUndefined(propertyKey)) {\r\n            if (!IsArray(decorators)) throw new TypeError();\r\n            if (!IsObject(target)) throw new TypeError();\r\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();\r\n            if (IsNull(attributes)) attributes = undefined;\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n            return DecorateProperty(<MemberDecorator[]>decorators, target, propertyKey, attributes);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators)) throw new TypeError();\r\n            if (!IsConstructor(target)) throw new TypeError();\r\n            return DecorateConstructor(<ClassDecorator[]>decorators, <Function>target);\r\n        }\r\n    }\r\n\r\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    export function metadata(metadataKey: any, metadataValue: any) {\r\n        function decorator(target: Function): void;\r\n        function decorator(target: any, propertyKey: string | symbol): void;\r\n        function decorator(target: any, propertyKey?: string | symbol): void {\r\n            if (!IsObject(target)) throw new TypeError();\r\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();\r\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        return decorator;\r\n    }\r\n\r\n    // 4.1.3 Reflect.defineMetadata(metadataKey, metadataValue, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.definemetadata\r\n\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): ClassDecorator {\r\n      *         return target => Reflect.defineMetadata(\"custom:annotation\", options, target);\r\n      *     }\r\n      *\r\n      */\r\n    export function defineMetadata(metadataKey: any, metadataValue: any, target: any): void;\r\n\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", Number, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", Number, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", Number, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", Number, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): PropertyDecorator {\r\n      *         return (target, key) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    export function defineMetadata(metadataKey: any, metadataValue: any, target: any, propertyKey: string | symbol): void;\r\n\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    export function defineMetadata(metadataKey: any, metadataValue: any, target: any, propertyKey?: string | symbol): void {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.4 Reflect.hasMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.hasmetadata\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function hasMetadata(metadataKey: any, target: any): boolean;\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function hasMetadata(metadataKey: any, target: any, propertyKey: string | symbol): boolean;\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function hasMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): boolean {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.5 Reflect.hasOwnMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-hasownmetadata\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function hasOwnMetadata(metadataKey: any, target: any): boolean;\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function hasOwnMetadata(metadataKey: any, target: any, propertyKey: string | symbol): boolean;\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function hasOwnMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): boolean {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.6 Reflect.getMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-getmetadata\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function getMetadata(metadataKey: any, target: any): any;\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getMetadata(metadataKey: any, target: any, propertyKey: string | symbol): any;\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): any {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.7 Reflect.getOwnMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-getownmetadata\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function getOwnMetadata(metadataKey: any, target: any): any;\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getOwnMetadata(metadataKey: any, target: any, propertyKey: string | symbol): any;\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getOwnMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): any {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.8 Reflect.getMetadataKeys(target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-getmetadatakeys\r\n\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      */\r\n    export function getMetadataKeys(target: any): any[];\r\n\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getMetadataKeys(target: any, propertyKey: string | symbol): any[];\r\n\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getMetadataKeys(target: any, propertyKey?: string | symbol): any[] {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryMetadataKeys(target, propertyKey);\r\n    }\r\n\r\n    // 4.1.9 Reflect.getOwnMetadataKeys(target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-getownmetadata\r\n\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      */\r\n    export function getOwnMetadataKeys(target: any): any[];\r\n\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getOwnMetadataKeys(target: any, propertyKey: string | symbol): any[];\r\n\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getOwnMetadataKeys(target: any, propertyKey?: string | symbol): any[] {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n    }\r\n\r\n    // 4.1.10 Reflect.deleteMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-deletemetadata\r\n\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function deleteMetadata(metadataKey: any, target: any): boolean;\r\n\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function deleteMetadata(metadataKey: any, target: any, propertyKey: string | symbol): boolean;\r\n\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function deleteMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): boolean {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        const metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n        if (IsUndefined(metadataMap)) return false;\r\n        if (!metadataMap.delete(metadataKey)) return false;\r\n        if (metadataMap.size > 0) return true;\r\n        const targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(propertyKey);\r\n        if (targetMetadata.size > 0) return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n\r\n    function DecorateConstructor(decorators: ClassDecorator[], target: Function): Function {\r\n        for (let i = decorators.length - 1; i >= 0; --i) {\r\n            const decorator = decorators[i];\r\n            const decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated)) throw new TypeError();\r\n                target = <Function>decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function DecorateProperty(decorators: MemberDecorator[], target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor | undefined): PropertyDescriptor | undefined {\r\n        for (let i = decorators.length - 1; i >= 0; --i) {\r\n            const decorator = decorators[i];\r\n            const decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated)) throw new TypeError();\r\n                descriptor = <PropertyDescriptor>decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n\r\n    // 2.1.1 GetOrCreateMetadataMap(O, P, Create)\r\n    // https://rbuckton.github.io/reflect-metadata/#getorcreatemetadatamap\r\n    function GetOrCreateMetadataMap(O: any, P: string | symbol | undefined, Create: true): Map<any, any>;\r\n    function GetOrCreateMetadataMap(O: any, P: string | symbol | undefined, Create: false): Map<any, any> | undefined;\r\n    function GetOrCreateMetadataMap(O: any, P: string | symbol | undefined, Create: boolean): Map<any, any> | undefined {\r\n        let targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create) return undefined;\r\n            targetMetadata = new _Map<string | symbol | undefined, Map<any, any>>();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        let metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create) return undefined;\r\n            metadataMap = new _Map<any, any>();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n\r\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n    function OrdinaryHasMetadata(MetadataKey: any, O: any, P: string | symbol | undefined): boolean {\r\n        const hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn) return true;\r\n        const parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n\r\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n    function OrdinaryHasOwnMetadata(MetadataKey: any, O: any, P: string | symbol | undefined): boolean {\r\n        const metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap)) return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n\r\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n    function OrdinaryGetMetadata(MetadataKey: any, O: any, P: string | symbol | undefined): any {\r\n        const hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        const parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n\r\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n    function OrdinaryGetOwnMetadata(MetadataKey: any, O: any, P: string | symbol | undefined): any {\r\n        const metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap)) return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n\r\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n    function OrdinaryDefineOwnMetadata(MetadataKey: any, MetadataValue: any, O: any, P: string | symbol | undefined): void {\r\n        const metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n\r\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n    function OrdinaryMetadataKeys(O: any, P: string | symbol | undefined): any[] {\r\n        const ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        const parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null) return ownKeys;\r\n        const parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0) return ownKeys;\r\n        if (ownKeys.length <= 0) return parentKeys;\r\n        const set = new _Set<any>();\r\n        const keys: any[] = [];\r\n        for (const key of ownKeys) {\r\n            const hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (const key of parentKeys) {\r\n            const hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n\r\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n    function OrdinaryOwnMetadataKeys(O: any, P: string | symbol | undefined): any[] {\r\n        const keys: any[] = [];\r\n        const metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap)) return keys;\r\n        const keysObj = metadataMap.keys();\r\n        const iterator = GetIterator(keysObj);\r\n        let k = 0;\r\n        while (true) {\r\n            const next = IteratorStep(iterator);\r\n            if (!next) {\r\n                keys.length = k;\r\n                return keys;\r\n            }\r\n            const nextValue = IteratorValue(next);\r\n            try {\r\n                keys[k] = nextValue;\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    IteratorClose(iterator);\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            k++;\r\n        }\r\n    }\r\n\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x: any): Tag {\r\n        if (x === null) return Tag.Null;\r\n        switch (typeof x) {\r\n            case \"undefined\": return Tag.Undefined;\r\n            case \"boolean\": return Tag.Boolean;\r\n            case \"string\": return Tag.String;\r\n            case \"symbol\": return Tag.Symbol;\r\n            case \"number\": return Tag.Number;\r\n            case \"object\": return x === null ? Tag.Null : Tag.Object;\r\n            default: return Tag.Object;\r\n        }\r\n    }\r\n\r\n    // 6.1 ECMAScript Language Types\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types\r\n    const enum Tag {\r\n        Undefined,\r\n        Null,\r\n        Boolean,\r\n        String,\r\n        Symbol,\r\n        Number,\r\n        Object\r\n    }\r\n\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x: any): x is undefined {\r\n        return x === undefined;\r\n    }\r\n\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x: any): x is null {\r\n        return x === null;\r\n    }\r\n\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x: any): x is symbol {\r\n        return typeof x === \"symbol\";\r\n    }\r\n\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject<T>(x: T | undefined | null | boolean | string | symbol | number): x is T {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input: any, PreferredType?: Tag): undefined | null | boolean | string | symbol | number {\r\n        switch (Type(input)) {\r\n            case Tag.Undefined: return input;\r\n            case Tag.Null: return input;\r\n            case Tag.Boolean: return input;\r\n            case Tag.String: return input;\r\n            case Tag.Symbol: return input;\r\n            case Tag.Number: return input;\r\n        }\r\n        const hint: \"string\" | \"number\" | \"default\" = PreferredType === Tag.String ? \"string\" : PreferredType === Tag.Number ? \"number\" : \"default\";\r\n        const exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            const result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result)) throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O: any, hint: \"string\" | \"number\"): undefined | null | boolean | string | symbol | number {\r\n        if (hint === \"string\") {\r\n            const toString = O.toString;\r\n            if (IsCallable(toString)) {\r\n                const result = toString.call(O);\r\n                if (!IsObject(result)) return result;\r\n            }\r\n            const valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                const result = valueOf.call(O);\r\n                if (!IsObject(result)) return result;\r\n            }\r\n        }\r\n        else {\r\n            const valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                const result = valueOf.call(O);\r\n                if (!IsObject(result)) return result;\r\n            }\r\n            const toString = O.toString;\r\n            if (IsCallable(toString)) {\r\n                const result = toString.call(O);\r\n                if (!IsObject(result)) return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument: any): boolean {\r\n        return !!argument;\r\n    }\r\n\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument: any): string {\r\n        return \"\" + argument;\r\n    }\r\n\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument: any): string | symbol {\r\n        const key = ToPrimitive(argument, Tag.String);\r\n        if (IsSymbol(key)) return key;\r\n        return ToString(key);\r\n    }\r\n\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument: any): argument is any[] {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument: any): argument is Function {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument: any): argument is Function {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n\r\n    // 7.2.7 IsPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n    function IsPropertyKey(argument: any): argument is string | symbol {\r\n        switch (Type(argument)) {\r\n            case Tag.String: return true;\r\n            case Tag.Symbol: return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V: any, P: any): Function | undefined {\r\n        const func = V[P];\r\n        if (func === undefined || func === null) return undefined;\r\n        if (!IsCallable(func)) throw new TypeError();\r\n        return func;\r\n    }\r\n\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n\r\n    function GetIterator<T>(obj: Iterable<T>): Iterator<T> {\r\n        const method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method)) throw new TypeError(); // from Call\r\n        const iterator = method.call(obj);\r\n        if (!IsObject(iterator)) throw new TypeError();\r\n        return iterator;\r\n    }\r\n\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue<T>(iterResult: IteratorResult<T>): T {\r\n        return iterResult.value;\r\n    }\r\n\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep<T>(iterator: Iterator<T>): IteratorResult<T> | false {\r\n        const result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose<T>(iterator: Iterator<T>) {\r\n        const f = iterator[\"return\"];\r\n        if (f) f.call(iterator);\r\n    }\r\n\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O: any): any {\r\n        const proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype) return proto;\r\n\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype) return proto;\r\n\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        const prototype = O.prototype;\r\n        const prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype) return proto;\r\n\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        const constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\") return proto;\r\n\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O) return proto;\r\n\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n\r\n    // naive Map shim\r\n    function CreateMapPolyfill(): MapConstructor {\r\n        const cacheSentinel = {};\r\n        const arraySentinel: any[] = [];\r\n\r\n        class MapIterator<K, V, R extends (K | V | [K, V])> implements IterableIterator<R> {\r\n            private _keys: K[];\r\n            private _values: V[];\r\n            private _index = 0;\r\n            private _selector: (key: K, value: V) => R;\r\n            constructor(keys: K[], values: V[], selector: (key: K, value: V) => R) {\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            \"@@iterator\"() { return this; }\r\n            [iteratorSymbol]() { return this; }\r\n            next(): IteratorResult<R> {\r\n                const index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    const result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: <never>undefined, done: true };\r\n            }\r\n            throw(error: any): IteratorResult<R> {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            }\r\n            return(value?: R): IteratorResult<R> {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: <never>value, done: true };\r\n            }\r\n        }\r\n\r\n        return class Map<K, V> {\r\n            private _keys: K[] = [];\r\n            private _values: (V | undefined)[] = [];\r\n            private _cacheKey = cacheSentinel;\r\n            private _cacheIndex = -2;\r\n            get size() { return this._keys.length; }\r\n            has(key: K): boolean { return this._find(key, /*insert*/ false) >= 0; }\r\n            get(key: K): V | undefined {\r\n                const index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            }\r\n            set(key: K, value: V): this {\r\n                const index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            }\r\n            delete(key: K): boolean {\r\n                const index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    const size = this._keys.length;\r\n                    for (let i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            clear(): void {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            keys() { return new MapIterator(this._keys, this._values, getKey); }\r\n            values() { return new MapIterator(this._keys, this._values, getValue); }\r\n            entries() { return new MapIterator(this._keys, this._values, getEntry); }\r\n            \"@@iterator\"() { return this.entries(); }\r\n            [iteratorSymbol]() { return this.entries(); }\r\n            private _find(key: K, insert?: boolean): number {\r\n                if (this._cacheKey !== key) {\r\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                }\r\n                if (this._cacheIndex < 0 && insert) {\r\n                    this._cacheIndex = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheIndex;\r\n            }\r\n        };\r\n\r\n        function getKey<K, V>(key: K, _: V) {\r\n            return key;\r\n        }\r\n\r\n        function getValue<K, V>(_: K, value: V) {\r\n            return value;\r\n        }\r\n\r\n        function getEntry<K, V>(key: K, value: V) {\r\n            return [key, value] as [K, V];\r\n        }\r\n    }\r\n\r\n    // naive Set shim\r\n    function CreateSetPolyfill(): SetConstructor {\r\n        return class Set<T> {\r\n            private _map = new _Map<any, any>();\r\n            get size() { return this._map.size; }\r\n            has(value: T): boolean { return this._map.has(value); }\r\n            add(value: T): Set<T> { return this._map.set(value, value), this; }\r\n            delete(value: T): boolean { return this._map.delete(value); }\r\n            clear(): void { this._map.clear(); }\r\n            keys() { return this._map.keys(); }\r\n            values() { return this._map.values(); }\r\n            entries() { return this._map.entries(); }\r\n            \"@@iterator\"() { return this.keys(); }\r\n            [iteratorSymbol]() { return this.keys(); }\r\n        };\r\n    }\r\n\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill(): WeakMapConstructor {\r\n        const UUID_SIZE = 16;\r\n        const keys = HashMap.create<boolean>();\r\n        const rootKey = CreateUniqueKey();\r\n        return class WeakMap<K, V> {\r\n            private _key = CreateUniqueKey();\r\n            has(target: K): boolean {\r\n                const table = GetOrCreateWeakMapTable<K>(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            }\r\n            get(target: K): V {\r\n                const table = GetOrCreateWeakMapTable<K>(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            }\r\n            set(target: K, value: V): WeakMap<K, V> {\r\n                const table = GetOrCreateWeakMapTable<K>(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            }\r\n            delete(target: K): boolean {\r\n                const table = GetOrCreateWeakMapTable<K>(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            }\r\n            clear(): void {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            }\r\n        };\r\n\r\n        function CreateUniqueKey(): string {\r\n            let key: string;\r\n            do key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n\r\n        function GetOrCreateWeakMapTable<K>(target: K, create: true): HashMap<any>;\r\n        function GetOrCreateWeakMapTable<K>(target: K, create: false): HashMap<any> | undefined;\r\n        function GetOrCreateWeakMapTable<K>(target: K, create: boolean): HashMap<any> | undefined {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create) return undefined;\r\n                Object.defineProperty(target, rootKey, { value: HashMap.create<any>() });\r\n            }\r\n            return (<any>target)[rootKey];\r\n        }\r\n\r\n        function FillRandomBytes(buffer: BufferLike, size: number): BufferLike {\r\n            for (let i = 0; i < size; ++i) buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n\r\n        function GenRandomBytes(size: number): BufferLike {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\") return crypto.getRandomValues(new Uint8Array(size)) as Uint8Array;\r\n                if (typeof msCrypto !== \"undefined\") return msCrypto.getRandomValues(new Uint8Array(size)) as Uint8Array;\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n\r\n        function CreateUUID() {\r\n            const data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            let result = \"\";\r\n            for (let offset = 0; offset < UUID_SIZE; ++offset) {\r\n                const byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8) result += \"-\";\r\n                if (byte < 16) result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary<T>(obj: T): T {\r\n        (<any>obj).__ = undefined;\r\n        delete (<any>obj).__;\r\n        return obj;\r\n    }\r\n\r\n    // patch global Reflect\r\n    (function (__global: any) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (const p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = (<any>Reflect)[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(\r\n        typeof global !== \"undefined\" ? global :\r\n            typeof self !== \"undefined\" ? self :\r\n                Function(\"return this;\")());\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/app/reflect-metadata/Reflect.ts","/**\n * Copyright ou © ou Copr. Ministère de l'Europe et des Affaires étrangères (2017)\n * <p/>\n * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr\n * <p/>\n * Ce logiciel est un programme informatique servant à faciliter la création\n * d'applications Web conformément aux référentiels généraux français : RGI, RGS et RGAA\n * <p/>\n * Ce logiciel est régi par la licence CeCILL soumise au droit français et\n * respectant les principes de diffusion des logiciels libres. Vous pouvez\n * utiliser, modifier et/ou redistribuer ce programme sous les conditions\n * de la licence CeCILL telle que diffusée par le CEA, le CNRS et l'INRIA\n * sur le site \"http://www.cecill.info\".\n * <p/>\n * En contrepartie de l'accessibilité au code source et des droits de copie,\n * de modification et de redistribution accordés par cette licence, il n'est\n * offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,\n * seule une responsabilité restreinte pèse sur l'auteur du programme,  le\n * titulaire des droits patrimoniaux et les concédants successifs.\n * <p/>\n * A cet égard  l'attention de l'utilisateur est attirée sur les risques\n * associés au chargement,  à l'utilisation,  à la modification et/ou au\n * développement et à la reproduction du logiciel par l'utilisateur étant\n * donné sa spécificité de logiciel libre, qui peut le rendre complexe à\n * manipuler et qui le réserve donc à des développeurs et des professionnels\n * avertis possédant  des  connaissances  informatiques approfondies.  Les\n * utilisateurs sont donc invités à charger  et  tester  l'adéquation  du\n * logiciel à leurs besoins dans des conditions permettant d'assurer la\n * sécurité de leurs systèmes et ou de leurs données et, plus généralement,\n * à l'utiliser et l'exploiter dans les mêmes conditions de sécurité.\n * <p/>\n * Le fait que vous puissiez accéder à cet en-tête signifie que vous avez\n * pris connaissance de la licence CeCILL, et que vous en avez accepté les\n * termes.\n * <p/>\n * <p/>\n * Copyright or © or Copr. Ministry for Europe and Foreign Affairs (2017)\n * <p/>\n * pole-architecture.dga-dsi-psi@diplomatie.gouv.fr\n * <p/>\n * This software is a computer program whose purpose is to facilitate creation of\n * web application in accordance with french general repositories : RGI, RGS and RGAA.\n * <p/>\n * This software is governed by the CeCILL license under French law and\n * abiding by the rules of distribution of free software.  You can  use,\n * modify and/ or redistribute the software under the terms of the CeCILL\n * license as circulated by CEA, CNRS and INRIA at the following URL\n * \"http://www.cecill.info\".\n * <p/>\n * As a counterpart to the access to the source code and  rights to copy,\n * modify and redistribute granted by the license, users are provided only\n * with a limited warranty  and the software's author,  the holder of the\n * economic rights,  and the successive licensors  have only  limited\n * liability.\n * <p/>\n * In this respect, the user's attention is drawn to the risks associated\n * with loading,  using,  modifying and/or developing or reproducing the\n * software by the user in light of its specific status of free software,\n * that may mean  that it is complicated to manipulate,  and  that  also\n * therefore means  that it is reserved for developers  and  experienced\n * professionals having in-depth computer knowledge. Users are therefore\n * encouraged to load and test the software's suitability as regards their\n * requirements in conditions enabling the security of their systems and/or\n * data to be ensured and,  more generally, to use and operate it in the\n * same conditions as regards security.\n * <p/>\n * The fact that you are presently reading this means that you have had\n * knowledge of the CeCILL license and that you accept its terms.\n *\n */\n\n/**\n * hornet-js-core - Ensemble des composants qui forment le coeur de hornet-js\n *\n * @author MEAE - Ministère de l'Europe et des Affaires étrangères\n * @version v5.1.0\n * @link git+https://github.com/diplomatiegouvfr/hornet-js.git\n * @license CECILL-2.1\n */\n\nimport \"reflect-metadata\";\nimport { Utils } from \"hornet-js-utils\";\nimport { INJECT_METADATA_KEY, Injector } from \"src/inject/injector\";\nimport { AbstractClass, Class } from \"hornet-js-utils/src/typescript-utils\";\n\ndeclare var Reflect: any;\n\n/**\n * Decorateur de classe pour l'enregistrer dans l'injecteur que si les côté correspond et permet d'injecter\n * des valeurs dans le constructeur\n * @param  key {any} clé de stockage\n * @param  side {Side} complément de clé correspondant au côté d'exécution (Client ou Serveur)\n * */\nexport function injectable(key?: Class<any> | AbstractClass<any> | string, scope: Scope = Scope.VALUE, side?: Side) {\n    return function <T extends {new(...args:any[]):{}}>(constructor:T) {\n        let injectParameters: {index: number, type: any}[] = Reflect.getOwnMetadata(INJECT_METADATA_KEY, constructor);\n        let newConstructor = constructor;\n        if (injectParameters) {\n            newConstructor = class extends constructor {\n                constructor(...args:any[]) {\n                    injectParameters.forEach((injectParameter) => {\n                        args[injectParameter.index] =  Injector.getRegistered(injectParameter.type || args[injectParameter.index]);\n                    });\n                    super(...args);\n                }\n            };\n        } \n        \n        if (key) {\n            if (!side || (side as Side == Side.SERVER && Utils.isServer) || (side == Side.CLIENT && !Utils.isServer)) {\n                Injector.register(key, newConstructor, scope );\n            }\n        }\n\n        return newConstructor;\n    }\n};\n\nexport enum Side {\n    SERVER,\n    CLIENT\n};\n\nexport enum Scope {\n    PROTOTYPE,\n    SINGLETON,\n    VALUE\n};\n\n\n// WEBPACK FOOTER //\n// /home/mouliwi/Dev/workspaceJS/tags/hornet-js_5.1.0/hornet-js-core/src/inject/injectable.ts"],"sourceRoot":""}